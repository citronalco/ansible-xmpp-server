# {{ ansible_managed }}
# Required for:
# - maintaining Prosody's LetsEncrypt certificate {{ prosody.web_domain.name }}
# - reverse proxy for BOSH (URL: https://{{ prosody.web_domain.name }}/http-bind)
# - reverse proxy for BOSH-Autoconfiguration (XEP-0156)
# - reverse proxy for Websocket (URL: https://{{ prosody.web_domain.name }}/xmpp-websocket)
# - reverse proxy for Pastebin (TODO)

<VirtualHost *:80>
    ServerName {{ prosody.web_domain.name }}

    ServerAdmin {{ prosody.web_domain.admin_email }}

    DocumentRoot /srv/var/www/vhosts/{{ prosody.web_domain.name }}

    # Logging
    ErrorLog /var/log/apache2/{{ prosody.web_domain.name }}-error_log
    CustomLog "|/usr/bin/python3 /usr/local/Anonip.git/anonip.py --skip-private --output /var/log/apache2/{{ prosody.web_domain.name }}-access_log" combined env=!dontlog

    # Don't loose time with IP address lookups
    HostnameLookups Off

    # Needed for named virtual hosts
    UseCanonicalName Off

    # "well-known" URIs for service discovery (XEP-0156) autogenerated with Prosody's http_altconnect module, which also sets the CORS header
    RewriteEngine On
    RewriteCond %{REQUEST_URI} "^/.well-known/host-meta(\.json)?$"
    RewriteRule ^(.*)$ "http://localhost:5280/$1" [P]

    # Redirect to HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} !=on
    RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,L]
</VirtualHost>


<VirtualHost *:443>
    ServerName {{ prosody.web_domain.name }}

    ServerAdmin {{ prosody.web_domain.admin_email }}

    DocumentRoot /srv/var/www/vhosts/{{ prosody.web_domain.name }}

    # Enable HTTP/2, if available
    Protocols h2 http/1.1

    # Logging
    ErrorLog /var/log/apache2/{{ prosody.web_domain.name }}-error_log
    CustomLog "|/usr/bin/python3 /usr/local/Anonip.git/anonip.py --skip-private --output /var/log/apache2/{{ prosody.web_domain.name }}-access_log" combined env=!dontlog

    # Don't loose time with IP address lookups
    HostnameLookups Off

    # Needed for named virtual hosts
    UseCanonicalName Off

    # LetsEncrypt
    SSLCertificateFile /etc/letsencrypt/live/{{ prosody.web_domain.name }}/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/{{ prosody.web_domain.name }}/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    ###############################

    # Static root page for some content
    <Location "/">
        Require all granted
        DirectoryIndex index.html
        RedirectMatch 404 /\.git
    </Location>

    #### Prosody ####
    # Reverse Proxy f√ºr BOSH und Websocket
    ProxyTimeout 900

    # BOSH
    <Location "/http-bind">
        ProxyPreserveHost on
        ProxyPass http://localhost:5280/http-bind
        ProxyPassReverse http://localhost:5280/http-bind
    </Location>

    # Websocket
    <Location "/xmpp-websocket">
        ProxyPreserveHost On
        ProxyPass "ws://127.0.0.1:5280/xmpp-websocket"
    </Location>

    # "well-known" URIs for service discovery (XEP-0156) autogenerated with Prosody's http_altconnect module, which also sets the CORS header
    ProxyPass /.well-known http://localhost:5280/.well-known
    ProxyPassReverse /.well-known http://localhost:5280/.well-known

    # Pastebin (TODO)
    #ProxyPass /pastebin http://localhost:5280/pastebin
    #ProxyPassReverse /pastebin http://localhost:5280/pastebin


    #### MOVIM #### (TODO)
    # Requires Service "Movim"
    # Movim configuration (taken from the Debian package)
    #ProxyPass /movim/ws/ ws://127.0.0.1:8080/

    #Alias /movim/ /usr/local/movim/public/
    #<Directory /usr/local/movim/public>
    #    Options +FollowSymlinks -Indexes
    #    AllowOverride FileInfo Options
    #</Directory>

    #Alias /movim/cache/ /usr/local/movim/cache/
    #<Directory /usr/local/movim/cache>
    #    Options -Indexes
    #</Directory>

    #<Location /movim/>
    #    Header set Access-Control-Allow-Origin "*"
    #    DirectoryIndex index.php
    #</Location>


    #### CONVERSE.JS ####
    ### Set up Converse.js infrastructure for Prosody's mod_conversejs

    ## css and js files
    <Location /conversejs>
        ProxyPass http://localhost:5280/conversejs
        ProxyPassReverse http://localhost:5280/conversejs
    </Location>

    <Directory /usr/local/conversejs>
        Options +FollowSymlinks
    </Directory>

{% for domain in prosody.xmpp_domains %}
    # {{ domain.name }} settings
    <Location {{ domain.conversejs.weblocation }}>
        # Prosody serves Converse.js configurations on all its VirtualHosts with appropriate settings. Default is "localhost"
        # Setting "{{ domain.name }}" here switches to Converse.js configuration of Prosody's VirtualHost "{{ domain.name }}"
        # This allows using some convenience settings, like allowing users from @{{ domain.name }} to log in by just typing in their username instead of the full JID
        ProxyPreserveHost on
        RequestHeader set Host "{{ domain.name }}"
        ProxyPass http://localhost:5280/conversejs
        ProxyPassReverse http://localhost:5280/conversejs
    </Location>

{% endfor %}
    # OMEMO support library for Converse.js
    Alias /conversejs-libsignal-protocol-javascript /usr/local/conversejs/libsignal-protocol-javascript/dist
    <Location /conversejs-libsignal-protocol-javascript>
        Require all granted
    </Location>

    # Workaround: Converse.js expects its sound files in /sounds/
    Alias /sounds /usr/local/conversejs/conversejs/package/dist
    <Location /sounds>
        Require all granted
    </Location>

    # Replace logo with custom iframe
    Alias /conversejs-custom /usr/local/conversejs/custom
    <Location /conversejs-custom>
        Require all granted
    </Location>

    # Redirect / to conversejs-bingo
    #RedirectMatch ^/$ /conversejs-bingo
</VirtualHost>
