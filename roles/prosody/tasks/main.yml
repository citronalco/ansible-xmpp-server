# Install Prosody
- name: Set up repository devel-lua for PostgreSQL support
  zypper_repository:
    name: "devel_languages_lua"
    repo: 'https://download.opensuse.org/repositories/devel:/languages:/lua/{{ ansible_distribution | replace(" ", "_") }}_{{ ansible_distribution_version }}/'
    auto_import_keys: yes
    runrefresh: yes

- name: Install Prosody
  zypper:
    name: "{{ item }}"
  loop:
    - prosody
    - lua51-luadbi
    - lua51-luaevent

- name: Create directory for systemd service override
  file:
    path: "/etc/systemd/system/prosody.service.d"
    state: directory
    mode: 0755

- name: Install systemd service override to prevent Prosody from starting before network and PostgreSQL are up
  copy:
    src: systemd-service-override
    dest: /etc/systemd/system/prosody.service.d/ansible-xmpp.conf
  notify:
    - reread systemd configs

- name: Enable Prosody
  systemd:
    name: prosody
    enabled: yes

- name: Configure Logrotate
  copy:
    src: logrotate
    dest: /etc/logrotate.d/prosody
    mode: "0644"


# Prosody Community Modules
- name: Install Mercurial
  zypper:
    name: "{{ item }}"
  loop:
    - "mercurial"
    - "python2-pyOpenSSL"

- name: Install Prosody community modules from Prosodys Mercurial repository
  hg:
    repo: "https://hg.prosody.im/prosody-modules/"
    dest: "/usr/local/lib/prosody-modules"
    force: yes
  notify: restart prosody
  tags:
    - skip_ansible_lint

- name: Install update script for Prosody modules
  copy:
    src: "update-prosody-modules.sh"
    dest: "/usr/local/sbin/update-prosody-modules.sh"
    mode: "0755"


# Create Prosody Configuration
- name: Create directories for XMPP domains
  file:
    path: "{{ item }}"
    state: directory
    group: "prosody"
    mode: "0750"
  loop:
    - "/etc/prosody/conf.avail"
    - "/etc/prosody/conf.d"

- name: Create Prosody configuration for XMPP domains
  template:
    src: "vhost.cfg.lua.j2"
    dest: "/etc/prosody/conf.avail/{{ item.name }}.cfg.lua"
    group: "prosody"
    mode: "0640"
  loop: "{{ prosody.xmpp_domains }}"
  notify: restart prosody

- name: Enable Prosody configuration for XMPP domains
  file:
    src: "/etc/prosody/conf.avail/{{ item.name }}.cfg.lua"
    dest: "/etc/prosody/conf.d/{{ item.name }}.cfg.lua"
    state: link
  loop: "{{ prosody.xmpp_domains }}"
  notify: restart prosody

- name: Create Prosody localhost XMPP domain
  template:
    src: "localhost.cfg.lua.j2"
    dest: "/etc/prosody/conf.avail/localhost.cfg.lua"
    group: "prosody"
    mode: "0640"
  notify: restart prosody

- name: Enable Prosody localhost XMPP domains
  file:
    src: "/etc/prosody/conf.avail/localhost.cfg.lua"
    dest: "/etc/prosody/conf.d/localhost.cfg.lua"
    state: link
  notify: restart prosody

- name: Create directories for certificates of main XMPP domains
  file:
    path: "/etc/prosody/certs/{{ item.name }}"
    state: directory
    owner: "prosody"
    group: "root"
    mode: "0770"
  loop: "{{ prosody.xmpp_domains }}"

- name: Create main Prosody configuration
  template:
    src: "prosody.cfg.lua.j2"
    dest: "/etc/prosody/prosody.cfg.lua"
    group: "prosody"
    mode: "0640"
  notify: restart prosody

- name: Create Prosody sharedGroups file
  template:
    src: "sharedGroups.txt.j2"
    dest: "/etc/prosody/sharedGroups-{{ item.name }}.txt"
    group: "prosody"
    mode: "0640"
  loop: "{{ prosody.xmpp_domains }}"
  notify: restart prosody

- name: Import LetsEncrypt certificates
  command: "/etc/letsencrypt/renewal-hooks/post/prosody.sh"


# Set up Prosody community module mod_http_upload_external to allow file uploads > 10 MByte
- name: Create directory for Prosody file uploads
  file:
    path: "/srv/var/prosody-upload/{{ item.name }}"
    state: directory
    owner: wwwrun
    mode: "0770"
  loop: "{{ prosody.xmpp_domains }}"

- name: Install PHP file upload script
  copy:
    remote_src: true
    src: "/usr/local/lib/prosody-modules/mod_http_upload_external/share_v2.php"
    dest: "/srv/var/www/vhosts/{{ item.components.upload }}/share_v2.php"
    mode: "0640"
    owner: "wwwrun"
  loop: "{{ prosody.xmpp_domains }}"

- name: PHP file upload script - set upload directory
  lineinfile:
    path: "/srv/var/www/vhosts/{{ item.components.upload }}/share_v2.php"
    regexp: '^\$CONFIG_STORE_DIR\s*='
    line: "$CONFIG_STORE_DIR = '/srv/var/prosody-upload/{{ item.name }}';"
  loop: "{{ prosody.xmpp_domains }}"

- name: PHP file upload script - set shared secret
  lineinfile:
    path: "/srv/var/www/vhosts/{{ item.components.upload }}/share_v2.php"
    regexp: '^\$CONFIG_SECRET\s*='
    line: "$CONFIG_SECRET = '{{ uploadpwd[item.name] }}';"
  loop: "{{ prosody.xmpp_domains }}"

- name: Set up cronjob to delete uploaded files
  cron:
    name: "Clean up Prosody upload directory of {{ item.name }}"
    job: "/usr/bin/find /srv/var/prosody-upload/{{ item.name }}/ -type f -mtime +{{ item.delete_uploads_after_days }} -exec rm {} \\;"
    minute: "{{ index % 60 }}"
    hour: "1"
  loop: "{{ prosody.xmpp_domains | flatten(levels=1) }}"
  loop_control:
    index_var: index
  when: item.delete_uploads_after_days is defined

- name: Remove cronjob deleting uploaded files
  cron:
    name: "Clean up Prosody upload directory of {{ item.name }}"
    state: absent
  loop: "{{ prosody.xmpp_domains }}"
  when: item.delete_uploads_after_days is not defined
